{"version":3,"file":"static/js/210.c3d7d1bd.chunk.js","mappings":"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","sources":["pages/Auth/Signup/validation.js","api/userApiCalls.js","pages/Auth/Signup/Signup.jsx"],"sourcesContent":["import Joi from \"joi\";\r\n\r\nlet validationMsgs = {\r\n  username: {\r\n    \"string.alphanum\": \"Username must contain only letters and numbers\",\r\n    \"string.min\": \"Username must be at least 3 characters long\",\r\n    \"string.max\": \"Username must not exceed 30 characters\",\r\n    \"string.empty\": \"Username is required\",\r\n  },\r\n  email: {\r\n    \"string.email\": \"Email must be in a valid format (e.g., user@domain.com)\",\r\n    \"string.empty\": \"Email is required\",\r\n  },\r\n  phone: {\r\n    \"string.empty\": \"Phone Number is required\",\r\n    \"string.pattern.base\": \"Phone Number must be valid phone number\",\r\n  },\r\n  address: {\r\n    \"string.empty\": \"Address is required\",\r\n    \"string.base\": \"Address is required\",\r\n  },\r\n  password: {\r\n    \"string.pattern.base\":\r\n      \"Password must be between 8 and 30 characters, containing only letters and numbers\",\r\n    \"string.empty\": \"Password is required\",\r\n  },\r\n  confirmPass: {\r\n    \"any.only\": \"Password and confirmation must match\",\r\n    \"string.empty\": \"Password confirmation is required\",\r\n  },\r\n};\r\n\r\nexport const schema = Joi.object({\r\n  username: Joi.string()\r\n    .alphanum()\r\n    .min(3)\r\n    .max(30)\r\n    .required()\r\n    .messages(validationMsgs.username),\r\n  email: Joi.string()\r\n    .email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"net\"] },\r\n    })\r\n    .messages(validationMsgs.email),\r\n  phone_number: Joi.string()\r\n    .pattern(/^[0-9]{10,15}$/) // Allow phone numbers with 10 to 15 digits\r\n    .messages(validationMsgs.phone),\r\n\r\n  // Location address schema\r\n  address: Joi.string()\r\n    .min(3)\r\n    .max(100)\r\n    .required()\r\n    .messages(validationMsgs.address),\r\n  password: Joi.string()\r\n    .pattern(new RegExp(\"^[a-zA-Z0-9]{8,30}$\"))\r\n    .messages(validationMsgs.password),\r\n\r\n  confirmPass: Joi.ref(\"password\"),\r\n})\r\n  .options({ abortEarly: false })\r\n  .messages(validationMsgs.confirmPass);\r\n\r\nexport const mapValidationToState = (user) => {\r\n  const { error } = schema.validate(user);\r\n  if (error) {\r\n    return error.details\r\n      .map((validObj) => {\r\n        return { [validObj.context.key]: validObj.message };\r\n      })\r\n      .reduce((initialObject, currentObject) => {\r\n        return { ...initialObject, ...currentObject };\r\n      });\r\n  }\r\n  return null;\r\n};\r\n","import axios from \"axios\";\r\nimport { base_url } from \"./config\";\r\n\r\nexport const apiSignUp = async (userData) => {\r\n  const response = await axios.post(`${base_url}/signup`, userData);\r\n  return response.data;\r\n};\r\n","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ApiSignUp } from \"../../../UsersData\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../../store/GlobalPrvider/GlobalProvider\";\r\n\r\nimport { mapValidationToState } from \"./validation\";\r\nimport { apiSignUp } from \"../../../api/userApiCalls\";\r\n\r\nconst isStateEmpty = (state) => {\r\n  return Object.keys(state).some((key) => !state[key]);\r\n};\r\n\r\nexport default function Signup() {\r\n  //global state\r\n  const { signUp } = useContext(GlobalContext);\r\n  //private state\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    confirmPass: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!isStateEmpty(userData) && !errors) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [userData, errors]);\r\n  //hooks\r\n  const navigate = useNavigate();\r\n  //handlers\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const errorsObject = mapValidationToState({\r\n        ...userData,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n      setErrors(errorsObject);\r\n      setUserData({ ...userData, [e.target.name]: e.target.value });\r\n    },\r\n    [userData]\r\n  );\r\n\r\n  //data\r\n  const inputsData = useMemo(\r\n    () => [\r\n      {\r\n        label: \"Username\",\r\n        value: userData.username,\r\n        name: \"username\",\r\n        type: \"text\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter Username\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.username,\r\n        onChange: handleChange,\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        value: userData.email,\r\n        name: \"email\",\r\n        type: \"email\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter email\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.email,\r\n        onChange: handleChange,\r\n      },\r\n      {\r\n        label: \"Phone Number\",\r\n        value: userData.phone_number,\r\n        name: \"phone_number\",\r\n        type: \"phone_number\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter Phone\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.phone_number,\r\n        onChange: handleChange,\r\n      },\r\n      {\r\n        label: \"Address\",\r\n        value: userData.address,\r\n        name: \"address\",\r\n        type: \"address\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter Address\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.address,\r\n        onChange: handleChange,\r\n      },\r\n      {\r\n        label: \"Password\",\r\n        value: userData.password,\r\n        name: \"password\",\r\n        type: \"password\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter password\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n              />\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.password,\r\n        onChange: handleChange,\r\n      },\r\n      {\r\n        label: \"Cofirm Password\",\r\n        value: userData.confirmPass,\r\n        name: \"confirmPass\",\r\n        type: \"password\",\r\n        className:\r\n          \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\r\n        placeholder: \"Enter password\",\r\n        icon: (\r\n          <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"size-4 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n              />\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        error: errors?.confirmPass,\r\n        onChange: handleChange,\r\n      },\r\n    ],\r\n    [\r\n      userData.username,\r\n      userData.password,\r\n      userData.address,\r\n      userData.phone_number,\r\n      userData.email,\r\n      userData.confirmPass,\r\n      errors,\r\n      handleChange,\r\n    ]\r\n  );\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors(null);\r\n    if (!errors) {\r\n      delete userData.confirmPass;\r\n      const response = await apiSignUp(userData);\r\n      console.log(response.status);\r\n\r\n      if (response.status === \"success\") {\r\n        console.log(\"is successful\");\r\n\r\n        signUp(response.user, response.token, navigate);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full px-4 py-12 sm:px-6 sm:py-16 lg:w-1/2 lg:px-8 lg:py-24\">\r\n      <div className=\"mx-auto max-w-lg text-center\">\r\n        <h1 className=\"text-2xl font-bold sm:text-3xl\">Get started today!</h1>\r\n\r\n        <p className=\"mt-4 text-gray-500\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Et libero\r\n          nulla eaque error neque ipsa culpa autem, at itaque nostrum!\r\n        </p>\r\n      </div>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"mx-auto mb-0 mt-8 max-w-md space-y-4\"\r\n      >\r\n        {inputsData.map((input) => (\r\n          <AppInput key={input.name} {...input} />\r\n        ))}\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            You Have an account already\r\n            <Link className=\"underline\" to={\"/auth\"}>\r\n              Sign in\r\n            </Link>\r\n          </p>\r\n\r\n          <button\r\n            disabled={disabled}\r\n            type=\"submit\"\r\n            className=\"disabled:opacity-50  disabled:cursor-not-allowed inline-block rounded-lg bg-blue-500 px-5 py-3 text-sm font-medium text-white\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AppInput({\r\n  label,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  className,\r\n  placeholder,\r\n  icon,\r\n  error,\r\n}) {\r\n  const [isErrorShow, setIsErrorShow] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\" className=\"sr-only\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"relative\">\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          className={className}\r\n          placeholder={placeholder}\r\n          onBlur={() => setIsErrorShow(true)}\r\n          onFocus={() => setIsErrorShow(false)}\r\n        />\r\n        {icon}\r\n      </div>\r\n\r\n      {error && isErrorShow && value && (\r\n        <div\r\n          class=\"p-4 my-4  text-sm text-red-800 rounded-lg bg-red-50\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["validationMsgs","schema","Joi","username","alphanum","min","max","required","messages","email","minDomainSegments","tlds","allow","phone_number","pattern","address","password","RegExp","confirmPass","options","abortEarly","mapValidationToState","user","error","validate","details","map","validObj","context","key","message","reduce","initialObject","currentObject","apiSignUp","async","axios","post","base_url","userData","data","isStateEmpty","state","Object","keys","some","Signup","signUp","useContext","GlobalContext","setUserData","useState","errors","setErrors","disabled","setDisabled","useEffect","navigate","useNavigate","handleChange","useCallback","e","errorsObject","target","name","value","inputsData","useMemo","label","type","className","placeholder","icon","_jsx","children","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","_jsxs","onSubmit","preventDefault","response","console","log","status","token","input","AppInput","Link","to","_ref","isErrorShow","setIsErrorShow","htmlFor","onBlur","onFocus","class","role"],"sourceRoot":""}